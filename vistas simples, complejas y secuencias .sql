create table cargo(
cod_cargo number,
nom_cargo varchar2(50),
constraint pk_car primary key(cod_cargo));

create table departamento(
cod_departamento number,
nom_departamento varchar2(50),
presupuesto_departamento number,
constraint pk_dep primary key(cod_departamento));

create table empleado(
cod_empleado number,
nom_empleado varchar2(50),
apel_empleado varchar2(50),
edad number,
genero varchar2(50),
sueldo number,
id_departamento number,
id_cargo number,
constraint pk_emple primary key(cod_empleado),
constraint fk_emple_01 foreign key(id_departamento) references departamento(cod_departamento),
constraint fk_emple_02 foreign key(id_cargo) references cargo(cod_cargo));

insert into cargo values(100,'Jefe');
insert into cargo values(200,'Operario');
insert into cargo values(300,'Asistente');
insert into cargo values(400,'Secretaria');
insert into cargo values(500,'Contralor');
insert into cargo values(600,'Tesorero');
insert into cargo values(700,'Asesor');
insert into cargo values(800,'Consultor');
insert into cargo values(900,'Diseñador');
insert into cargo values(1000,'Analista');


insert into departamento values(101,'Recursos Humanos',9700000);
insert into departamento values(102,'Produccion',8600000);
insert into departamento values(103,'Finanzas',120000000);
insert into departamento values(104,'Control de calidad',9500000);
insert into departamento values(105,'Post ventas',8000000);
insert into departamento values(106,'Informatica',5400000);
insert into departamento values(107,'Contabilidad',7800000);
insert into departamento values(108,'Marketing',10050000);
insert into departamento values(109,'Ventas',11000000);
insert into departamento values(110,'Mantenimiento',7400000);


insert into empleado values(201,'Fernado','Flores',51,'masculino',950000,101,500);
insert into empleado values(202,'Pilar','Negrete',21,'femenino',650000,102,200);
insert into empleado values(203,'Gabriela','Alcantara',45,'femenino',850000,103,300);
insert into empleado values(204,'Consuelo','Lucero',25,'femenino',950000,101,200);
insert into empleado values(205,'Ivan','Valenzuela',58,'masculino',950000,102,500);
insert into empleado values(206,'Jaime','Leal',41,'masculino',650000,104,300);
insert into empleado values(207,'Daniel','Lagos',35,'masculino',450000,101,200);
insert into empleado values(208,'Jorge','Lucero',32,'masculino',2450000,107,100);
insert into empleado values(209,'Luis','Gonzalez',42,'masculino',850000,107,300);
insert into empleado values(210,'Sara','Ramirez',41,'femenino',650000,104,400);

SELECT * FROM CARGO;

CREATE  OR REPLACE VIEW HOMBRES AS SELECT * FROM EMPLEADO
WHERE GENERO ='masculino'; //ESTE COMANDO SE USA PARA GENERARA VISTAS. IMPORTANTE: LAS VISTAS SE USAN CON "SELECT". REPLACE SE USA PARA REEMPLAZAR//

/* MOSTRAR LOS EMPLEADOS DE GENERO MASCULINO */

SELECT * FROM EMPLEADO WHERE
GENERO = 'masculino';

SELECT * FROM HOMBRES; //AMBAS CONSULTAS DAN EL MISMO RESULTADO, AUNQUE ESTA ULTIMA ESTA USANDO LA VISTA CREADA (HOMBRES)//

CREATE VIEW MUJERES AS
SELECT * FROM EMPLEADO
WHERE GENERO='femenino';

/* CREAR UNA VISTA CON EL NOMBRE DEPTO_COSTOSOS FORMADA POR LAS COLUMNAS DE LA TABLA DEPARTAMENTO CUANDO
EL PRESUPUESTO ES MAYOR O IGUAL A 100000000*/

CREATE VIEW DEPTO_COSTOSOS AS
SELECT * FROM DEPARTAMENTO
WHERE PRESUPUESTO_DEPARTAMENTO >= 100000000;

SELECT * FROM DEPTO_COSTOSOS;

/* CREAR LA VISTA  EMPLEADOS_SUELDO CONFORMADA POR LAS FILAS DE LA TABLA EMPLEADOCUANDO EL SUELDO SE ENCUENTRA EN EL RANGO DE
LOS 800000 Y 600000, AMBOS INCLUSIVE*/

CREATE VIEW EMPLEADOS_SUELDO AS
SELECT * FROM EMPLEADO
WHERE  SUELDO BETWEEN 600000 AND 800000;

/* CUANDO ALGUIEN USA FUNCIONES DE AGREGACION (GROUP BY, AVG, MAX, MIN,GROUP BY, ETC.) DEJA DE SER UNA VISTA SIMPLE
LAS VISTAS SIMPLES PERMITEN LAS OPERACIONES DML DE SQL, ES DECIR, PODEMOS USAR INSERT, UPDATE, SELECT)*/

INSERT INTO MUJERES VALUES (500,'Luisa','Romero',31,'femenino',1100000,106,1000); //ACÁ AÑADIMOS A UNA EMPLEADA DESDE LA VISTA "MUJERES"//

SELECT * FROM EMPLEADO; //AL AÑADIR DESDE LAS VISTAS, TAMBIÉN SE MODIFICAN LOS DATOS EN LA TABLA DESDE LA QUE SE EXTRAJERON LOS DATOS PARA LA VISTA//

UPDATE MUJERES SET NOM_EMPLEADO = 'Luisa Fernanda'
WHERE COD_EMPLEADO = 500; //SE ACTUALIZA LA VISTA Y LA TABLA BASE//

SELECT * FROM MUJERES;

DELETE FROM MUJERES
WHERE COD_EMPLEADO = 500;

DROP VIEW MUJERES; //ESTO SE USA PARA ELIMINAR UNA VISTA. NOTA: ESTO NO ELIMINA LA TABLA DESDE DONDE SE EXTRAJERON LOS DATOS//

DROP VIEW EMPLEADOS_SUELDO;
DROP VIEW DEPTO_COSTOSOS;
DROP VIEW HOMBRES;

CREATE VIEW JOVENES AS
SELECT * FROM EMPLEADO
WHERE EDAD < 40
WITH READ ONLY; //GENERA UNA VISTA DE SOLO LECTURA//

INSERT INTO JOVENES VALUES('Andres','Fuentes',34,'masculino',950000);

DELETE FROM JOVENES;

//VISTAS COMPLEJAS//
SELECT * FROM CARGO,EMPLEADO; //PARA SELECCIONAR DATOS DE MÁS DE UNA TABLA, SE USA UNA ,. SI EJECUTAMOS ESTA ORDEN, EL GESTOR COMBINA LOS DATOS DE LAS TABLAS//

SELECT * FROM CARGO,EMPLEADO
WHERE ID_CARGO=COD_CARGO; //SE USAN LAS CLAVES FORANEAS PARA QUE EL GESTOR NO MUESTRE DATOS REPETIDOS, COMO EN EL CASO ANTERIOR//

/* LISTAR EL NOMBRE, APELLIDO Y NOMBRE DEL CARGO DE TODOS LOS EMPLEADOS */

SELECT NOM_EMPLEADO,APEL_EMPLEADO,NOM_CARGO
FROM EMPLEADO,CARGO
WHERE COD_CARGO=ID_CARGO; 
//LAS VISTAS COMPLEJAS SON LAS QUE SE CREAN A PARTIR DE 2 O MAS TABLAS//
CREATE VIEW EMPLEADOS_DEPTO AS
SELECT NOM_EMPLEADO,APEL_EMPLEADO,NOM_DEPARTAMENTO
FROM EMPLEADO,DEPARTAMENTO
WHERE COD_DEPARTAMENTO = ID_DEPARTAMENTO; //SE IGUALAN LAS CLAVES FORANEAS//

//NOTA: EN ESTOS CASOS NO SOPRTAN INSTRUCCIONES DML, ES DECIR,NO SE PUEDE HACER INSERT, UPDATE, ETC. YA QUE ESTÁN CONFORMADAS DE 2 O MAS TABLAS, SALVO ALGUNOS CASOS//
/*EN EL PRESENTE CASO, SI SE HACE DELETE A LA VISTA, SE BORRAN LOS DATOS DE LA TABLA EMPLEADO. POR ENDE, TAMBIEN PUEDE AFEVTAR LOS DATOS DE LAS TABLAS DE ORIGEN.
PARA EVITAR ESTO SE PUEDEN ESTABLECER LAS VISTAS COMO READ ONLY*/

//SECUENCIAS//
CREATE SEQUENCE MI_SECUENCIA 
START WITH 1    
INCREMENT BY 1; //ASI SE CREA UNA SECUENCIA. ESTAS SE ALMACENAN EN LA CARPETA "SECUENCIAS" EN EL PANEL LATERAL//
//START DEFINE EL INICIO DE LA SECUENCIA, Y INCREMENT, CADA CUANTO SE VA A INCREMENTAR LA SECUENCIA// 

CREATE TABLE CIUDADES(
ID_CIUDAD NUMBER,
NOMBRE VARCHAR2 (50),
CONSTRAINT PK_CIUDAD PRIMARY KEY(ID_CIUDAD));

INSERT INTO CIUDADES VALUES(MI_SECUENCIA.NEXTVAL,'CURICO');
INSERT INTO CIUDADES VALUES(MI_SECUENCIA.NEXTVAL,'MOLINA');
INSERT INTO CIUDADES VALUES(MI_SECUENCIA.NEXTVAL,'TENO');
INSERT INTO CIUDADES VALUES(MI_SECUENCIA.NEXTVAL,'RAUCO');
INSERT INTO CIUDADES VALUES(MI_SECUENCIA.NEXTVAL,'SAGRADA FAMILIA');
//PARA USAR LAS SECUENCIAS, SE UTILIZA EL NOMBRE DE LA SECUENCIA Y LA PSEUDO COLUMNA "NEXTVAL" O SEA, QUEDARIA ALGO COMO "NOM_SECUENCIA.NEXTVAL"//
SELECT * FROM CIUDADES;

SELECT MI_SECUENCIA.CURRVAL FROM CIUDADES; //CURRVAL MUESTRA EL VALOR ACTUAL. SE USA COMO "NOM_SECUENCIA.CURRVAL"//

SELECT MI_SECUENCIA.CURRVAL FROM DUAL; //DUAL ES UNA TABLA CREADA AUTOMATICAMENTE POR ORACLE//

CREATE SEQUENCE SERIE 
START WITH 50
INCREMENT BY 5;

INSERT INTO CIUDADES VALUES(SERIE.NEXTVAL,'TALCA');
INSERT INTO CIUDADES VALUES(SERIE.NEXTVAL,'LINARES');

SELECT SERIE.CURRVAL FROM DUAL;